/* rmg-message-type.h
 *
 * Copyright 2019 Alin Popa <alin.popa@fxdata.ro>
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name(s) of the above copyright
 * holders shall not be used in advertising or otherwise to promote the sale,
 * use or other dealings in this Software without prior written
 * authorization.
 */

#pragma once

#include <glib.h>
#include <stdbool.h>
#include <stdint.h>

G_BEGIN_DECLS

#define RMG_BUILDTIME_VERSION "@version@"
#define RMG_MESSAGE_START_HASH (0xECDE)

#define RMG_MESSAGE_ACTION_NAME_LEN (256)
#define RMG_VERSION_STRING_LEN (8)

#ifndef RMG_MESSAGE_PACKED
#define RMG_MESSAGE_PACKED __attribute__((aligned (1), packed))
#endif

typedef enum _RmgMessageType {
  RMG_REQUEST_ACTION,
  RMG_MESSAGE_CHAR,
  RMG_MESSAGE_RAW
} RmgMessageType;

typedef struct _RmgMessageRequestAction {
  char actionName[RMG_MESSAGE_ACTION_NAME_LEN];
} RmgMessageDataNew;

typedef union _RmgMessageData {
  RmgMessageRequestAction request;
} RmgMessageData;

typedef struct _RmgMessageHdr {
  uint16_t hsh;
  uint16_t session;
  uint8_t version[RMG_VERSION_STRING_LEN];
  RmgMessageType type;
  uint32_t data_size;
} RMG_MESSAGE_PACKED RmgMessageHdr;

typedef struct _RmgMessage {
  RmgMessageHdr hdr;
  void *data;
} RMG_MESSAGE_PACKED RmgMessage;

G_END_DECLS
